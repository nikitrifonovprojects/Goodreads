// <auto-generated />
using System;
using Goodreads.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Goodreads.Data.Migrations
{
    [DbContext(typeof(GoodreadsContext))]
    [Migration("20180621153749_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Goodreads.Data.Models.Authors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorData");

                    b.Property<string>("AuthorUrl");

                    b.Property<string>("Born");

                    b.Property<string>("Influences");

                    b.Property<DateTime>("MemberSince");

                    b.Property<string>("Name");

                    b.Property<string>("Twitter");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Goodreads.Data.Models.Genres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorsId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AuthorsId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Goodreads.Data.Models.Genres", b =>
                {
                    b.HasOne("Goodreads.Data.Models.Authors")
                        .WithMany("Genre")
                        .HasForeignKey("AuthorsId");
                });
#pragma warning restore 612, 618
        }
    }
}
